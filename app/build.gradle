plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id "androidx.navigation.safeargs.kotlin"
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.ibrahim.currencyconverter"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    dynamicFeatures = [':home', ':exchangerate']
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api project(":core")
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$androidxTestExtJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxTestEspresso"

    //region Hilt for dependency injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltJetpack"
    // When using Kotlin.
    kapt "androidx.hilt:hilt-compiler:$hiltJetpack"
    //endregion

    //region Retrofit for networking
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:converter-jackson:$jacksonConverter"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor"
    //endregion
}